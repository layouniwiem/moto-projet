apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: moto-app
  labels:
    app: flask-app
    tier: backend
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: flask-app
        # Laisser un placeholder ${DOCKER_REGISTRY}/${APP_NAME}:${APP_VERSION} Ã  remplacer dans Jenkinsfile
        image: "${DOCKER_REGISTRY}/${APP_NAME}:${APP_VERSION}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 5000
          protocol: TCP
        env:
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: MYSQL_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: MYSQL_DATABASE
        - name: MYSQL_HOST
          value: "mariadb"
        - name: FLASK_ENV
          value: "production"
        - name: GUNICORN_WORKERS
          value: "2"
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi


        readinessProbe:
          httpGet:
            path: /health
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
        startupProbe:
          httpGet:
            path: /health
            port: 5000
          failureThreshold: 10
          periodSeconds: 5
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: tmp-volume
        emptyDir: {}
