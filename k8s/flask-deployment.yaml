apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: moto-app
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - name: flask-app
        image: __IMAGE__  # À remplacer par votre image
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: uploads-volume
          mountPath: /app/uploads  # Chemin dans le container
        env:
        - name: GUNICORN_CMD_ARGS
          value: "--bind=0.0.0.0:5000 --workers=2 --timeout=120 --keep-alive=2 --preload --access-logfile -"
        - name: UPLOAD_FOLDER
          value: "/app/uploads"  # Doit correspondre au mountPath
        # ... [vos autres variables d'environnement] ...
        resources:
          requests:
            memory: "512Mi"  # Augmenté
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        startupProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 12
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 120  # Délai long pour l'appli
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: uploads-volume
        persistentVolumeClaim:
          claimName: flask-uploads-pvc