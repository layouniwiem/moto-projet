# roles/monitoring/tasks/main.yml
---
- name: Création du répertoire pour Prometheus
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  with_items:
    - /etc/prometheus
    - /var/lib/prometheus
    - /etc/prometheus/rules
    - /etc/prometheus/file_sd

- name: Téléchargement de Prometheus
  get_url:
    url: https://github.com/prometheus/prometheus/releases/download/v2.37.0/prometheus-2.37.0.linux-amd64.tar.gz
    dest: /tmp/prometheus.tar.gz
    mode: '0644'

- name: Extraction de Prometheus
  unarchive:
    src: /tmp/prometheus.tar.gz
    dest: /tmp/
    remote_src: yes

- name: Copie des binaires Prometheus
  copy:
    src: "/tmp/prometheus-2.37.0.linux-amd64/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    remote_src: yes
    mode: '0755'
  with_items:
    - prometheus
    - promtool

- name: Configuration de Prometheus
  template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
    mode: '0644'
  notify: restart prometheus

- name: Installation du service Prometheus
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    mode: '0644'
  notify: restart prometheus

- name: Téléchargement de Node Exporter
  get_url:
    url: https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz
    dest: /tmp/node_exporter.tar.gz
    mode: '0644'

- name: Extraction de Node Exporter
  unarchive:
    src: /tmp/node_exporter.tar.gz
    dest: /tmp/
    remote_src: yes

- name: Copie du binaire Node Exporter
  copy:
    src: /tmp/node_exporter-1.3.1.linux-amd64/node_exporter
    dest: /usr/local/bin/node_exporter
    remote_src: yes
    mode: '0755'

- name: Installation du service Node Exporter
  template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    mode: '0644'
  notify: restart node_exporter

- name: Installation de Grafana
  block:
    - name: Ajout de la clé GPG Grafana
      apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present

    - name: Ajout du dépôt Grafana
      apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present

    - name: Installation de Grafana
      apt:
        name: grafana
        state: present
        update_cache: yes

    - name: Démarrage du service Grafana
      service:
        name: grafana-server
        state: started
        enabled: yes

- name: Ouverture des ports de monitoring
  ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  with_items:
    - 9090  # Prometheus
    - 9100  # Node Exporter
    - 3000  # Grafana

# roles/monitoring/handlers/main.yml
---
- name: restart prometheus
  systemd:
    name: prometheus
    state: restarted
    daemon_reload: yes
    enabled: yes

- name: restart node_exporter
  systemd:
    name: node_exporter
    state: restarted
    daemon_reload: yes
    enabled: yes

# roles/monitoring/templates/prometheus.yml.j2
---
- global:
    scrape_interval: 15s
    evaluation_interval: 15s

  alerting:
    alertmanagers:
      - static_configs:
          - targets:
            # - alertmanager:9093

  rule_files:
    # - "alert_rules.yml"

  scrape_configs:
    - job_name: 'prometheus'
      static_configs:
        - targets: ['localhost:9090']
    
    - job_name: 'node_exporter'
      static_configs:
        - targets: 
          - 'localhost:9100'
          - '{{ hostvars["vm1"]["ansible_host"] }}:9100'
          - '{{ hostvars["vm2"]["ansible_host"] }}:9100'
    
    - job_name: 'flask_app'
      metrics_path: '/metrics'
      static_configs:
        - targets: ['{{ hostvars["vm2"]["ansible_host"] }}:5000']
