- name: Installation des prérequis K3s
  apt:
    name:
      - curl
      - gnupg2
      - software-properties-common
      - apt-transport-https
    state: present

- name: Configuration système pour K3s
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    sysctl_set: yes
    reload: yes

- name: Installation de K3s (Master)
  shell: |
    curl -sfL https://get.k3s.io | sh -s - \
      --disable=traefik \
      --write-kubeconfig-mode=644 \
      --advertise-address={{ ansible_host }}
  args:
    creates: /usr/local/bin/k3s
  when: k3s_type == "master"

- name: Attendre que K3s soit disponible
  wait_for:
    path: /etc/rancher/k3s/k3s.yaml
    state: present
    timeout: 300
  when: k3s_type == "master"

- name: Récupérer le kubeconfig
  fetch:
    src: /etc/rancher/k3s/k3s.yaml
    dest: ./k3s.yaml
    flat: yes
  when: k3s_type == "master"

- name: Installation du NGINX Ingress Controller
  shell: |
    kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.1/deploy/static/provider/cloud/deploy.yaml
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  when: k3s_type == "master"

- name: Créer le namespace de l'application
  shell: |
    kubectl create namespace {{ project_name }} --dry-run=client -o yaml | kubectl apply -f -
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  when: k3s_type == "master"
  
- name: Vider le dossier /tmp/k8s/ sur la machine distante
  file:
    path: /tmp/k8s/
    state: absent
  when: k3s_type == "master"


- name: Copier uniquement les manifests YAML
  find:
    paths: "/home/wiem/wiem/devopsRiders/moto-projet/k8s" 
    patterns: "*.yaml,*.yml"
    recurse: no
  register: k8s_manifests
  when: k3s_type == "master"

- name: Copier les fichiers YAML vers le nœud cible
  copy:
    src: "{{ item.path }}"
    dest: "/tmp/k8s/{{ item.path | basename }}"
  loop: "{{ k8s_manifests.files }}"
  when: k3s_type == "master"
