---
- name: Initialisation des serveurs
  hosts: all
  become: yes

  vars:
    node_exporter_version: "1.3.1"
    node_exporter_user: "node_exporter"

  tasks:

    - name: Mise à jour du cache APT
      apt:
        update_cache: yes
        cache_valid_time: 3600
      register: apt_result
      retries: 5
      delay: 10
      until: apt_result is succeeded

    - name: Mise à jour complète des paquets
      apt:
        upgrade: dist

    - name: Installation des paquets essentiels
      apt:
        name:
          - vim
          - curl
          - wget
          - htop
          - git
          - python3
          - python3-pip
          - apt-transport-https
          - ca-certificates
          - gnupg
          - lsb-release
          - ufw
          - fail2ban
        state: present

    - name: Configuration du fuseau horaire
      timezone:
        name: Europe/Paris

    - name: Activation et configuration de l'UFW (pare-feu)
      ufw:
        state: enabled
        policy: deny

    - name: Autoriser SSH via UFW
      ufw:
        rule: allow
        port: "22"
        proto: tcp

    - name: Autoriser les ports de monitoring (Prometheus, Node Exporter, Grafana)
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop: [9090, 9100, 3000]

    - name: Ajout de la clé GPG Docker
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Ajout du dépôt Docker
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present

    - name: Installation de Docker et plugins
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: Ajouter l'utilisateur actuel au groupe docker
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Activer Docker au démarrage
      service:
        name: docker
        state: started
        enabled: yes

    - name: Configuration fail2ban
      copy:
        dest: /etc/fail2ban/jail.local
        content: |
          [DEFAULT]
          bantime = 3600
          findtime = 600
          maxretry = 5

          [sshd]
          enabled = true

    - name: Redémarrer fail2ban
      service:
        name: fail2ban
        state: restarted
        enabled: yes

    ############################################
    # NODE EXPORTER - MONITORING
    ############################################

    - name: Créer un utilisateur node_exporter
      user:
        name: "{{ node_exporter_user }}"
        shell: /usr/sbin/nologin
        system: yes

    - name: Télécharger Node Exporter
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: /tmp/node_exporter.tar.gz
        mode: '0644'

    - name: Extraire Node Exporter
      unarchive:
        src: /tmp/node_exporter.tar.gz
        dest: /opt/
        remote_src: yes

    - name: Déplacer le binaire Node Exporter
      copy:
        remote_src: yes
        src: "/opt/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
        dest: /usr/local/bin/node_exporter
        mode: '0755'

    - name: Créer un service systemd pour Node Exporter
      copy:
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Node Exporter
          After=network.target

          [Service]
          User={{ node_exporter_user }}
          ExecStart=/usr/local/bin/node_exporter
          Restart=always

          [Install]
          WantedBy=multi-user.target

    - name: Démarrer et activer Node Exporter
      systemd:
        name: node_exporter
        state: started
        enabled: yes
