---
- name: Initialisation complète des serveurs
  hosts: all
  become: yes

  vars:
    node_exporter_version: "1.8.1"

  tasks:
    - name: Nettoyer le cache APT
      apt:
        autoclean: yes
        autoremove: yes

    - name: Mise à jour du cache APT (avec retries)
      apt:
        update_cache: yes
        cache_valid_time: 3600
      register: apt_update
      retries: 5
      delay: 10
      until: apt_update is succeeded

    - name: Mise à niveau des paquets
      apt:
        upgrade: dist

    - name: Installation des paquets essentiels
      apt:
        name:
          - vim
          - curl
          - wget
          - htop
          - git
          - python3
          - python3-pip
          - apt-transport-https
          - ca-certificates
          - gnupg
          - lsb-release
          - ufw
          - fail2ban
        state: present
        update_cache: yes

    - name: Configuration du fuseau horaire
      timezone:
        name: Europe/Paris

    - name: Configuration UFW - activation du pare-feu
      ufw:
        state: enabled
        policy: deny

    - name: Autoriser SSH via UFW
      ufw:
        rule: allow
        port: 22
        proto: tcp

    - name: Installation de Docker
      block:
        - name: Ajouter clé GPG Docker
          apt_key:
            url: https://download.docker.com/linux/debian/gpg
            state: present

        - name: Ajouter dépôt Docker
          apt_repository:
            repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
            state: present
          notify: Update apt cache

        - name: Installer Docker CE et dépendances
          apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-compose-plugin
            state: present
            update_cache: yes

        - name: Ajouter l'utilisateur ansible au groupe docker
          user:
            name: "{{ ansible_user }}"
            groups: docker
            append: yes

        - name: Activer et démarrer Docker
          service:
            name: docker
            state: started
            enabled: yes

    - name: Installer Node Exporter
      block:
        - name: Télécharger Node Exporter
          get_url:
            url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
            dest: /tmp/node_exporter.tar.gz
            mode: '0644'

        - name: Extraire Node Exporter
          unarchive:
            src: /tmp/node_exporter.tar.gz
            dest: /tmp/
            remote_src: yes

        - name: Copier binaire Node Exporter
          copy:
            src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
            dest: /usr/local/bin/node_exporter
            mode: '0755'

        - name: Installer le service systemd Node Exporter
          copy:
            dest: /etc/systemd/system/node_exporter.service
            content: |
              [Unit]
              Description=Node Exporter
              Wants=network-online.target
              After=network-online.target

              [Service]
              User=nobody
              ExecStart=/usr/local/bin/node_exporter

              [Install]
              WantedBy=default.target
          mode: '0644'
          notify: Restart node_exporter

        - name: Activer et démarrer Node Exporter
          systemd:
            name: node_exporter
            enabled: yes
            state: started

    - name: Configurer Fail2Ban
      copy:
        dest: /etc/fail2ban/jail.local
        content: |
          [DEFAULT]
          bantime = 3600
          findtime = 600
          maxretry = 5

          [sshd]
          enabled = true

    - name: Redémarrer Fail2Ban
      service:
        name: fail2ban
        state: restarted
        enabled: yes

  handlers:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Restart node_exporter
      systemd:
        name: node_exporter
        state: restarted
        enabled: yes
